# Generated by Django 3.2.6 on 2021-08-19 19:33

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CombinedSynonyms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('symbol', models.TextField(blank=True, db_column='Symbol', null=True)),
                ('synonym', models.TextField(blank=True, db_column='Synonym', null=True)),
            ],
            options={
                'db_table': 'COMBINED_synonyms',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DgidbCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('gene_symbol', models.TextField(blank=True, db_column='Gene_Symbol', null=True)),
                ('gene_name', models.TextField(blank=True, db_column='Gene_Name', null=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'DGIdb_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugbankDrugInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drugbank_id', models.TextField(blank=True, db_column='DrugBank_ID', null=True)),
                ('accession_numbers', models.TextField(blank=True, db_column='Accession_Numbers', null=True)),
                ('common_name', models.TextField(blank=True, db_column='Common_name', null=True)),
                ('synonyms', models.TextField(blank=True, db_column='Synonyms', null=True)),
            ],
            options={
                'db_table': 'DRUGBANK_drug_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DrugbankTargets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drugbank_id', models.TextField(blank=True, db_column='DrugBank_ID', null=True)),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('uniprot_id', models.TextField(blank=True, db_column='Uniprot_ID', null=True)),
                ('drug_name', models.TextField(blank=True, db_column='Drug_Name', null=True)),
                ('target', models.TextField(blank=True, db_column='Target', null=True)),
                ('actions', models.TextField(blank=True, db_column='Actions', null=True)),
                ('genesymbol', models.TextField(blank=True, db_column='GeneSymbol', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'DRUGBANK_Targets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoBiologicalProcesses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('gene_symbol', models.TextField(blank=True, db_column='Gene_symbol', null=True)),
                ('biological_process', models.TextField(blank=True, db_column='Biological_Process', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'GO_biological_processes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoCellularComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('cellular_component', models.TextField(blank=True, db_column='Cellular_component', null=True)),
                ('gene_symbol', models.TextField(blank=True, db_column='Gene_symbol', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'GO_cellular_component',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoMolecularFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('molecular_function', models.TextField(blank=True, db_column='Molecular_Function', null=True)),
                ('gene_symbol', models.TextField(blank=True, db_column='Gene_Symbol', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'GO_molecular_function',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HgncGeneInfo',
            fields=[
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', primary_key=True, serialize=False)),
                ('approved_symbol', models.TextField(blank=True, db_column='Approved_symbol', null=True)),
                ('approved_name', models.TextField(blank=True, db_column='Approved_name', null=True)),
                ('status', models.TextField(blank=True, db_column='Status', null=True)),
                ('previous_symbols', models.TextField(blank=True, db_column='Previous_symbols', null=True)),
                ('alias_symbols', models.TextField(blank=True, db_column='Alias_symbols', null=True)),
                ('chromosome', models.TextField(blank=True, db_column='Chromosome', null=True)),
                ('accession_numbers', models.TextField(blank=True, db_column='Accession_numbers', null=True)),
                ('ensembl_id', models.TextField(blank=True, db_column='Ensembl_ID', null=True)),
                ('ncbi_id', models.IntegerField(blank=True, db_column='NCBI_ID', null=True)),
                ('uniprot_id', models.TextField(blank=True, db_column='UniProt_ID', null=True)),
                ('omim_id', models.TextField(blank=True, db_column='OMIM_ID', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'HGNC_gene_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HippieProteinInteractions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id_1', models.TextField(blank=True, db_column='HGNC_ID_1', null=True)),
                ('gene_symbol_1', models.TextField(blank=True, db_column='Gene_Symbol_1', null=True)),
                ('gene_id_1', models.IntegerField(blank=True, db_column='Gene_ID_1', null=True)),
                ('hgnc_id_2', models.TextField(blank=True, db_column='HGNC_ID_2', null=True)),
                ('gene_symbol_2', models.TextField(blank=True, db_column='Gene_Symbol_2', null=True)),
                ('gene_id_2', models.IntegerField(blank=True, db_column='Gene_ID_2', null=True)),
                ('score', models.FloatField(blank=True, db_column='Score', null=True)),
                ('experiments', models.TextField(blank=True, db_column='Experiments', null=True)),
                ('pmids', models.TextField(blank=True, db_column='PMIDS', null=True)),
                ('sources', models.TextField(blank=True, db_column='Sources', null=True)),
            ],
            options={
                'db_table': 'HIPPIE_protein_interactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HpaBiologicalProcess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('gene', models.TextField(blank=True, db_column='Gene', null=True)),
                ('biological_process', models.TextField(blank=True, db_column='Biological_process', null=True)),
                ('field4', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'HPA_biological_process',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HpaMolecularFunction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('gene', models.TextField(blank=True, db_column='Gene', null=True)),
                ('molecular_function', models.TextField(blank=True, db_column='Molecular_function', null=True)),
                ('field4', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'HPA_molecular_function',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HpaProteinClasses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('gene', models.TextField(blank=True, db_column='Gene', null=True)),
                ('protein_class', models.TextField(blank=True, db_column='Protein_class', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'HPA_protein_classes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HpaProteinSubcellularLocations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('gene', models.TextField(blank=True, db_column='Gene', null=True)),
                ('subcellular_location', models.TextField(blank=True, db_column='Subcellular_location', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'HPA_protein_subcellular_locations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HpoGenesToPhenotype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('entrez_gene_id', models.IntegerField(blank=True, null=True)),
                ('gene_symbol', models.TextField(blank=True, null=True)),
                ('hpo_term_id', models.TextField(blank=True, db_column='HPO_Term_ID', null=True)),
                ('hpo_term_name', models.TextField(blank=True, db_column='HPO_Term_Name', null=True)),
                ('disease_id_for_link', models.TextField(blank=True, db_column='disease_ID_for_link', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_date', null=True)),
            ],
            options={
                'db_table': 'HPO_genes_to_phenotype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MsigdbPathways',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('pathway', models.TextField(blank=True, db_column='Pathway', null=True)),
                ('url', models.TextField(blank=True, db_column='URL', null=True)),
                ('gene', models.TextField(blank=True, db_column='Gene', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'MSigDB_pathways',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NcbiGeneInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgncid', models.TextField(blank=True, db_column='HGNCID', null=True)),
                ('geneid', models.IntegerField(blank=True, db_column='GeneID', null=True)),
                ('symbol', models.TextField(blank=True, db_column='Symbol', null=True)),
                ('synonyms', models.TextField(blank=True, db_column='Synonyms', null=True)),
                ('dbxrefs', models.TextField(blank=True, db_column='dbXrefs', null=True)),
                ('chromosome', models.TextField(blank=True, null=True)),
                ('map_location', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('type_of_gene', models.TextField(blank=True, null=True)),
                ('symbol_from_nomenclature_authority', models.TextField(blank=True, db_column='Symbol_from_nomenclature_authority', null=True)),
                ('full_name_from_nomenclature_authority', models.TextField(blank=True, db_column='Full_name_from_nomenclature_authority', null=True)),
                ('other_designations', models.TextField(blank=True, db_column='Other_designations', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'NCBI_gene_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NcbiGenesToPhenotypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('ncbi_id', models.IntegerField(blank=True, db_column='NCBI_ID', null=True)),
                ('gene_symbol', models.TextField(blank=True, db_column='Gene_Symbol', null=True)),
                ('condition', models.TextField(blank=True, db_column='Condition', null=True)),
                ('concept_id', models.TextField(blank=True, db_column='Concept_ID', null=True)),
                ('omim_id', models.IntegerField(blank=True, db_column='OMIM_ID', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'NCBI_genes_to_phenotypes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SnapDrugTargets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_id', models.TextField(blank=True, db_column='HGNC_ID', null=True)),
                ('drugbank_id', models.TextField(blank=True, db_column='DrugBank_ID', null=True)),
                ('uniprot_id', models.TextField(blank=True, db_column='UniProt_ID', null=True)),
                ('source', models.TextField(blank=True, db_column='Source', null=True)),
                ('source_date', models.IntegerField(blank=True, db_column='Source_Date', null=True)),
                ('download_date', models.IntegerField(blank=True, db_column='Download_Date', null=True)),
            ],
            options={
                'db_table': 'SNAP_drug_targets',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StringProteinInteractions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgnc_1', models.TextField(blank=True, db_column='HGNC_1', null=True)),
                ('hgnc_2', models.TextField(blank=True, db_column='HGNC_2', null=True)),
                ('combined_score', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'STRING_protein_interactions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='vwProteinInteractions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geneSymbol1', models.TextField(db_column='GeneSymbol1')),
                ('geneName1', models.TextField(db_column='GeneName1')),
                ('geneSymbol2', models.TextField(db_column='GeneSymbol2')),
                ('geneName2', models.TextField(db_column='GeneName2')),
                ('combined_score', models.TextField(db_column='combined_score')),
                ('experiments', models.TextField(db_column='Experiments')),
                ('source', models.TextField(db_column='Source')),
            ],
            options={
                'db_table': 'vw_ProteinInteractions',
                'managed': False,
            },
        ),
    ]
